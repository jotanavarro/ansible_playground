---
- hosts: zookeepers
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install OpenJDK-17
      apt: name=openjdk-17-jre update_cache=yes state=latest force_apt_get=yes

    - name: Create Zookeeper user account
      user:
        name: "{{ username }}"
        comment: The Zookeeper system user
        system: yes

    - name: Zookeeper data directory
      file:
        path: /var/lib/zookeeper
        owner: "{{ username }}"
        group: "{{ group }}"
        state: directory

    - name: Download Zookeeper tarball
      get_url:
        url: "{{ zookeeper_url }}/zookeeper-{{ zookeeper_version }}/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        dest: /opt/
        checksum: "{{ zookeeper_checksum }}"
      register: zookeeper_tarball

    - name: Extract tarball
      unarchive:
        src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        dest: /opt
        remote_src: yes
        owner: "{{ username }}"
        group: "{{ group }}"
      when: zookeeper_tarball.changed

    - name: Link the directory
      file:
        src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin"
        dest: "{{ inst_dir }}"
        owner: "{{ username }}"
        group: "{{ group }}"
        state: link
        follow: yes

    - name: Store hostname
      command: /usr/bin/hostname
      register: myname

    - name: Create ID file for Zookeeper
      template:
        src: "files/myid.j2"
        dest: "/var/lib/zookeeper/myid"
        owner: "{{ username }}"
        group: "{{ group }}"
      register: zookeeper_id

    - name: Deploy Zookeeper configuration
      template:
        src: "files/zookeeper.conf.j2"
        dest: "{{ inst_dir }}/conf/zookeeper.conf"
        owner: "{{ username }}"
        group: "{{ group }}"
      register: zookeeper_configuration

    - name: Deploy Zookeeper Systemd service file
      template:
        src: "files/zookeeper.service.j2"
        dest: "/etc/systemd/system/zookeeper.service"
      register: zookeeper_service


    - name: Zookeeper Systemd service
      systemd:
        name: zookeeper
        state: started
        enabled: yes

    - name: Zookeeper restarts
      systemd:
        name: zookeeper
        state: restarted
        daemon_reload: yes
      when: zookeeper_configuration.changed or zookeeper_service.changed or zookeeper_id.changed

